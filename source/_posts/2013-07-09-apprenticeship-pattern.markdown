---
layout: post
title: "Apprenticeship Pattern读书笔记"
date: 2013-07-09 19:06
comments: true
categories: Technology
---

花2个星期读完了这本书，作者是一名前ThoughtWorker，所以书里谈到的很多概念还是很清楚。

书本身非常好，里面谈到了从一名软件小工到专家的成长方法，这些方法都是读者能够拿之能用的。

<!-- more -->

在读这本书的时候，我一直担心会因为时间的流失而渐渐忘记书中的内容，所以特意写下这篇博客来记录对书的感悟。

其中，最令我难忘的是confront your ignorance和share with others about what you learn。结合到自己这一年坎坎坷坷的TW之路，感触还是颇深。

不管是在工作还是学习中，我很多时候都没有摆正心态和位置。例如如果大家一起讨论一个问题，我并不知道他们讲的是什么，但是我并没有立即问出来，担心其他人觉得自己太菜，连这么基本的道理或工具都不知道，这样会觉得很没面子。书中关于这一点特别做出了阐述，那就是—-在一个安全的环境下（至少TW是），勇敢地表达自己的无知，因为在别人眼里，并不觉得你不知道这个有什么不妥。但是如果你这次问出来了，你知道了答案，你就进步了一些。别人看来你也很好学，而不是自己想象的那样被鄙视。在得到答案之后，应该以某种方式记录下来，或者自己私下继续探索，而不是这样就过了。当下次别人问起时，你不知道，别人会觉得你的学习能力甚至智商有问题。

其次，应该多share自己学到的东西。别人可以看到你的进步，同时自己也能通过分享的方式加强自己对知识本身的吸收。这一点在书中还有很多章节与之呼应，例如find mentor和find kindred 
spirit。他们都强调在学习的过程中，有人带是多么的重要。自己应该尽量多地去找你的mentor问问题，多暴露自己的不足。

此外，书中还谈到了一点：不要满足于现状，应该不断地去探索新知识。软件行业瞬息万变，始终要记住，自己今天所掌握的知识都在以某种方式贬值。不断地学习乃立足行业的前提。

最后，关于知识的整理和记录。这一点是我在TW这一年被反复强调的学习方法。但是自己都没有做好，不是因为笔记不够多，而是在记笔记后就把它扔了，这样的结果是虽然你学了，笔记也写了（看似很好的学习方法），但是到后来还是完全没有印象。归根到底还是因为平时没有去回顾博客中的内容。在回顾的过程中，结合自己在后来学习到的新知识，会有更深的理解或者不同的见解。

最后的最后，一定要努力。记得读过一篇博客，讲的是一名MS的员工在刚加入的时候，自己直接背了个睡袋到办公室去睡了一年，想到自己在TW这一年稍显酱油的方式，真的很惭愧。以后一定不要再犯这些错误了！！！
